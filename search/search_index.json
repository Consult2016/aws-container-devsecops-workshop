{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Overview In this workshop, you will learn how to leverage AWS development tools and open-source projects to integrate automated security testing into a CI/CD pipeline. Learn about a variety of patterns for integrating security testing and security-centric release control into AWS CodePipeline. Additionally, learn how to add feedback loops and fix common security vulnerabilities in your container-based application. Level : Advanced Duration : 2 - 3 hours Prerequisites : AWS Account, Admin IAM User CSF Functions : Prevent, Detect CAF Components : Preventative, Detective AWS Services : Amazon CloudWatch , AWS CodeCommit , AWS CodeBuild , AWS CodePipeline , Amazon ECR , AWS Lambda , and AWS Security Hub Open Source Projects : Hadolint , Trufflehog , and Anchore Scenario Your company has just kicked off a new DevSecOps initiative in an effort to improve the security of critical applications by embedding security in every part of the software development lifecycle. You are part of a DevOps team tasked with integrating security testing into a rudimentary pipeline for building and releasing container images. Your initial tasks include adding in Dockerfile linting, secrets scanning, and vulnerability scanning. The decision has been made to evaluate and make use of open source projects with the possibility of moving to a commercial offering based on how well the requirements are met. Architecture For this workshop you will start with a basic CI/CD pipeline that is triggered on Pull Requests and builds and pushes a container image to an Amazon ECR repository. As you work through the tasks in your latest sprint you'll end up with the CI/CD/pipelin as shown below. It will include stages with in your AWS CodePipeline for linting Dockerfiles, scanning for secrets, and scanning for vulnerabilities including integration with AWS Security Hub. In addition you will be using a combination of Amazon CloudWatch Event Rules and Lambda Functions to create feedback loops for each stage of security testing you create. This will allow your developers to quickly fix and iterate on their code which will lead to faster and more secure delivery. Presentation deck Workshop Presentation Deck Region Please use the us-east-2 (Ohio) region for this workshop. Modules This workshop is broken up into the four modules below: Environment Setup Dockerfile Linting Secrets Scanning Vulnerability Scanning Review and Discussion","title":"Overview"},{"location":"#overview","text":"In this workshop, you will learn how to leverage AWS development tools and open-source projects to integrate automated security testing into a CI/CD pipeline. Learn about a variety of patterns for integrating security testing and security-centric release control into AWS CodePipeline. Additionally, learn how to add feedback loops and fix common security vulnerabilities in your container-based application. Level : Advanced Duration : 2 - 3 hours Prerequisites : AWS Account, Admin IAM User CSF Functions : Prevent, Detect CAF Components : Preventative, Detective AWS Services : Amazon CloudWatch , AWS CodeCommit , AWS CodeBuild , AWS CodePipeline , Amazon ECR , AWS Lambda , and AWS Security Hub Open Source Projects : Hadolint , Trufflehog , and Anchore","title":"Overview"},{"location":"#scenario","text":"Your company has just kicked off a new DevSecOps initiative in an effort to improve the security of critical applications by embedding security in every part of the software development lifecycle. You are part of a DevOps team tasked with integrating security testing into a rudimentary pipeline for building and releasing container images. Your initial tasks include adding in Dockerfile linting, secrets scanning, and vulnerability scanning. The decision has been made to evaluate and make use of open source projects with the possibility of moving to a commercial offering based on how well the requirements are met.","title":"Scenario"},{"location":"#architecture","text":"For this workshop you will start with a basic CI/CD pipeline that is triggered on Pull Requests and builds and pushes a container image to an Amazon ECR repository. As you work through the tasks in your latest sprint you'll end up with the CI/CD/pipelin as shown below. It will include stages with in your AWS CodePipeline for linting Dockerfiles, scanning for secrets, and scanning for vulnerabilities including integration with AWS Security Hub. In addition you will be using a combination of Amazon CloudWatch Event Rules and Lambda Functions to create feedback loops for each stage of security testing you create. This will allow your developers to quickly fix and iterate on their code which will lead to faster and more secure delivery.","title":"Architecture"},{"location":"#presentation-deck","text":"Workshop Presentation Deck","title":"Presentation deck"},{"location":"#region","text":"Please use the us-east-2 (Ohio) region for this workshop.","title":"Region"},{"location":"#modules","text":"This workshop is broken up into the four modules below: Environment Setup Dockerfile Linting Secrets Scanning Vulnerability Scanning Review and Discussion","title":"Modules"},{"location":"01-env-setup/","text":"Module 1 Environment Setup In the first module you will be configuring the initial pipeline and setting up the Anchore service which you will be integrating the pipeline with later on in this workshop. This module requires you to run two separate AWS CloudFormation templates which will automate the creation of the pipeline and Anchore service. You will then walk through each stage and manually configure the security testing. Browse to your Cloud9 IDE You will be doing the majority of the workshop using the AWS Command Line Interface (CLI) within AWS Cloud9 , a cloud-based integrated development environment (IDE) that lets you write, run, and debug your code with just a browser. Open the AWS Cloud9 console (us-east-2) Click Open IDE in the container-devsecops-wksp-ide environment. This will take you to your IDE in a new tab. Always keep this tab open To make life easier on yourself, always keep your IDE tab open and use a different tab for all other activities. Deploy your pipeline The first CloudFormation you run will create the initial pipeline. Before you deploy the CloudFormation template feel free to view it here . Create the CloudFormation stack: aws cloudformation create-stack \\ --stack-name container-dso-wksp-pipeline-stack \\ --template-url https://s3.us-east-2.amazonaws.com/sa-security-specialist-workshops-us-east-2/devsecops/containers/pipeline-setup.yml \\ --capabilities CAPABILITY_NAMED_IAM \\ --region us-east-2 aws cloudformation create-stack \\ --stack-name container-dso-wksp-anchore-stack \\ --template-url https://s3.us-east-2.amazonaws.com/sa-security-specialist-workshops-us-east-2/devsecops/containers/anchore-fargate.yml \\ --capabilities CAPABILITY_NAMED_IAM CAPABILITY_AUTO_EXPAND \\ --region us-east-2 https://s3-us-west-2.amazonaws.com/sa-security-specialist-workshops-us-east-2/threat-detect-workshop/staging/01-environment-setup.yml Test your pipeline Deploy the Anchore service Open the CloudWatch console (us-west-2) To initiate the scenario and configure your environment you will need to run the module 1 CloudFormation template: Before you deploy the CloudFormation template feel free to view it here . Region Deploy US West 2 (Oregon) Click the Deploy to AWS button above. This will automatically take you to the console to run the template. On the Specify Details section enter the necessary parameters as shown below. Parameter Value Stack name ThreatDetectionWksp-Env-Setup Email Address A valid email address Once you have entered your parameters click Next , then Next again (leave everything on this page at the default). Finally, acknowledge that the template will create IAM roles and click Create . This will bring you back to the CloudFormation console. You can refresh the page to see the stack starting to create. Before moving on, make sure the stack is in a CREATE_COMPLETE status as shown below. You will get an email from SNS asking you to confirm the Subscription. Confirm the subscription so you can receive email alerts from AWS services during the Workshop. Setup Amazon CloudWatch event rules and automatic response The CloudFormation template you just ran created three CloudWatch Event Rules for alerting and response purposes. The steps below will walk you through creating the final rule. After this you'll have rules in place to receive email notifications and trigger AWS Lambda functions to respond to threats. Below are steps to create this rule through the console but you can also find out more about doing it programmatically by reviewing the Amazon GuardDuty Documentation . Open the CloudWatch console (us-west-2) In the navigation pane on the left, under Events , click Rules What are the current Rules in place setup to do? Click Create Rule Under Event Pattern click Build event pattern to match events by service and select Custom event pattern in the drop down. Copy and paste in the custom event pattern below: { source : [ aws.guardduty ], detail : { type : [ UnauthorizedAccess:EC2/MaliciousIPCaller.Custom ] } } For Targets , click Add Target , select Lambda Function , and then select threat-detection-wksp-remediation-nacl . Click Configure details . On the Configure rule details screen fill out the Name and Description (suggestions below). Name: threat-detection-wksp-guardduty-finding-ec2-maliciousip Description: GuardDuty Finding: UnauthorizedAccess:EC2/MaliciousIPCaller.Custom Click Create rule . Optional: Consider examining the Lambda function to see what it does. Open the Lambda console . Click on the function named threat-detection-wksp-remediation-nacl What will the function do when invoked? Enable Amazon GuardDuty The next step is to enable Amazon GuardDuty, which will continuously monitor your environment for malicious or unauthorized behavior. Go to the Amazon GuardDuty console (us-west-2). Click the Get Started button. On the next screen click the Enable GuardDuty button. GuardDuty is now enabled and continuously monitoring your CloudTrail logs, VPC flow logs, and DNS Query logs for threats in your environment. Enable Amazon Macie Since you plan on storing sensitive data in S3, let\u2019s quickly enable Amazon Macie. Macie is a security service that will continuously monitor data access activity for anomalies and generate alerts when it detects risk of unauthorized access or inadvertent data leaks. Go to the Amazon Macie console (us-west-2). Click Get Started . Macie will create a service-linked role when you enable it. If you would like to see the permissions that the role will have you can click the View service role permissions . Click Enable Macie . Setup Amazon Macie for data discovery classification Macie is also used for automatically discovering and classifying sensitive data. Now that Macie is enabled, setup an integration to classify data in your S3 bucket. In the Amazon Macie console click on Integrations on the left navigation. Find your AWS account ID (there should be only one) and click Select Click Add then on the next screen click the check box next to the S3 bucket that ends with \u201c-data\u201d . Click Add Leave the options here at the default, click Review . On the next screen click Start Classification . Finally click Done . Macie is now enabled and has begun to discover, classify and protect your data. Enable AWS Security Hub Now that all of your detective controls have been configured you need to enable AWS Security Hub , which will provide you with a comprehensive view of the security and compliance of your AWS environment. Go to the AWS Security Hub console. Click the Enable Security Hub button. On the next screen click the Enable AWS Security Hub button. AWS Security Hub is now enabled and will begin collecting and aggregating findings from the security services we have enabled so far. Architecture overview Your environment is now configured and ready for operations. Below is a diagram to depict the detective controls you now have in place. After you have successfully setup your environment, you can proceed to the next module.","title":"Module 1: Environment Setup"},{"location":"01-env-setup/#module-1-environment-setup","text":"In the first module you will be configuring the initial pipeline and setting up the Anchore service which you will be integrating the pipeline with later on in this workshop. This module requires you to run two separate AWS CloudFormation templates which will automate the creation of the pipeline and Anchore service. You will then walk through each stage and manually configure the security testing.","title":"Module 1 Environment Setup"},{"location":"01-env-setup/#browse-to-your-cloud9-ide","text":"You will be doing the majority of the workshop using the AWS Command Line Interface (CLI) within AWS Cloud9 , a cloud-based integrated development environment (IDE) that lets you write, run, and debug your code with just a browser. Open the AWS Cloud9 console (us-east-2) Click Open IDE in the container-devsecops-wksp-ide environment. This will take you to your IDE in a new tab. Always keep this tab open To make life easier on yourself, always keep your IDE tab open and use a different tab for all other activities.","title":"Browse to your Cloud9 IDE"},{"location":"01-env-setup/#deploy-your-pipeline","text":"The first CloudFormation you run will create the initial pipeline. Before you deploy the CloudFormation template feel free to view it here . Create the CloudFormation stack: aws cloudformation create-stack \\ --stack-name container-dso-wksp-pipeline-stack \\ --template-url https://s3.us-east-2.amazonaws.com/sa-security-specialist-workshops-us-east-2/devsecops/containers/pipeline-setup.yml \\ --capabilities CAPABILITY_NAMED_IAM \\ --region us-east-2 aws cloudformation create-stack \\ --stack-name container-dso-wksp-anchore-stack \\ --template-url https://s3.us-east-2.amazonaws.com/sa-security-specialist-workshops-us-east-2/devsecops/containers/anchore-fargate.yml \\ --capabilities CAPABILITY_NAMED_IAM CAPABILITY_AUTO_EXPAND \\ --region us-east-2 https://s3-us-west-2.amazonaws.com/sa-security-specialist-workshops-us-east-2/threat-detect-workshop/staging/01-environment-setup.yml","title":"Deploy your pipeline"},{"location":"01-env-setup/#test-your-pipeline","text":"","title":"Test your pipeline"},{"location":"01-env-setup/#deploy-the-anchore-service","text":"Open the CloudWatch console (us-west-2) To initiate the scenario and configure your environment you will need to run the module 1 CloudFormation template: Before you deploy the CloudFormation template feel free to view it here . Region Deploy US West 2 (Oregon) Click the Deploy to AWS button above. This will automatically take you to the console to run the template. On the Specify Details section enter the necessary parameters as shown below. Parameter Value Stack name ThreatDetectionWksp-Env-Setup Email Address A valid email address Once you have entered your parameters click Next , then Next again (leave everything on this page at the default). Finally, acknowledge that the template will create IAM roles and click Create . This will bring you back to the CloudFormation console. You can refresh the page to see the stack starting to create. Before moving on, make sure the stack is in a CREATE_COMPLETE status as shown below. You will get an email from SNS asking you to confirm the Subscription. Confirm the subscription so you can receive email alerts from AWS services during the Workshop.","title":"Deploy the Anchore service"},{"location":"01-env-setup/#setup-amazon-cloudwatch-event-rules-and-automatic-response","text":"The CloudFormation template you just ran created three CloudWatch Event Rules for alerting and response purposes. The steps below will walk you through creating the final rule. After this you'll have rules in place to receive email notifications and trigger AWS Lambda functions to respond to threats. Below are steps to create this rule through the console but you can also find out more about doing it programmatically by reviewing the Amazon GuardDuty Documentation . Open the CloudWatch console (us-west-2) In the navigation pane on the left, under Events , click Rules What are the current Rules in place setup to do? Click Create Rule Under Event Pattern click Build event pattern to match events by service and select Custom event pattern in the drop down. Copy and paste in the custom event pattern below: { source : [ aws.guardduty ], detail : { type : [ UnauthorizedAccess:EC2/MaliciousIPCaller.Custom ] } } For Targets , click Add Target , select Lambda Function , and then select threat-detection-wksp-remediation-nacl . Click Configure details . On the Configure rule details screen fill out the Name and Description (suggestions below). Name: threat-detection-wksp-guardduty-finding-ec2-maliciousip Description: GuardDuty Finding: UnauthorizedAccess:EC2/MaliciousIPCaller.Custom Click Create rule . Optional: Consider examining the Lambda function to see what it does. Open the Lambda console . Click on the function named threat-detection-wksp-remediation-nacl What will the function do when invoked?","title":"Setup Amazon CloudWatch event rules and automatic response"},{"location":"01-env-setup/#enable-amazon-guardduty","text":"The next step is to enable Amazon GuardDuty, which will continuously monitor your environment for malicious or unauthorized behavior. Go to the Amazon GuardDuty console (us-west-2). Click the Get Started button. On the next screen click the Enable GuardDuty button. GuardDuty is now enabled and continuously monitoring your CloudTrail logs, VPC flow logs, and DNS Query logs for threats in your environment.","title":"Enable Amazon GuardDuty"},{"location":"01-env-setup/#enable-amazon-macie","text":"Since you plan on storing sensitive data in S3, let\u2019s quickly enable Amazon Macie. Macie is a security service that will continuously monitor data access activity for anomalies and generate alerts when it detects risk of unauthorized access or inadvertent data leaks. Go to the Amazon Macie console (us-west-2). Click Get Started . Macie will create a service-linked role when you enable it. If you would like to see the permissions that the role will have you can click the View service role permissions . Click Enable Macie .","title":"Enable Amazon Macie"},{"location":"01-env-setup/#setup-amazon-macie-for-data-discovery-classification","text":"Macie is also used for automatically discovering and classifying sensitive data. Now that Macie is enabled, setup an integration to classify data in your S3 bucket. In the Amazon Macie console click on Integrations on the left navigation. Find your AWS account ID (there should be only one) and click Select Click Add then on the next screen click the check box next to the S3 bucket that ends with \u201c-data\u201d . Click Add Leave the options here at the default, click Review . On the next screen click Start Classification . Finally click Done . Macie is now enabled and has begun to discover, classify and protect your data.","title":"Setup Amazon Macie for data discovery &amp; classification"},{"location":"01-env-setup/#enable-aws-security-hub","text":"Now that all of your detective controls have been configured you need to enable AWS Security Hub , which will provide you with a comprehensive view of the security and compliance of your AWS environment. Go to the AWS Security Hub console. Click the Enable Security Hub button. On the next screen click the Enable AWS Security Hub button. AWS Security Hub is now enabled and will begin collecting and aggregating findings from the security services we have enabled so far.","title":"Enable AWS Security Hub"},{"location":"01-env-setup/#architecture-overview","text":"Your environment is now configured and ready for operations. Below is a diagram to depict the detective controls you now have in place. After you have successfully setup your environment, you can proceed to the next module.","title":"Architecture overview"},{"location":"02-linting/","text":"Module 2 Add a Dockerfile linting stage Attendees will learn about the security considerations around building container images and then apply those learnings by embedding security testing into a CI/CD pipeline that's used for building, shipping, and deploying a container based application. They will get hands-on experience integrating security testing such as static analysis of Dockerfiles and application code, vulnerability assessments of images, and signing of images using a variety of open source projects. At the end of the workshop they'll have a fully automated CI/CD pipeline with embedded security testing that they can use to deploy an application. Level : Intermediate Duration : 2 - 3 hours CSF Functions : Prevent CAF Components : Preventative Prerequisites : AWS Account, Admin IAM User Scenario Architecture Presentation deck Region Modules","title":"Module 2: Dockerfile Linting"},{"location":"02-linting/#module-2-add-a-dockerfile-linting-stage","text":"Attendees will learn about the security considerations around building container images and then apply those learnings by embedding security testing into a CI/CD pipeline that's used for building, shipping, and deploying a container based application. They will get hands-on experience integrating security testing such as static analysis of Dockerfiles and application code, vulnerability assessments of images, and signing of images using a variety of open source projects. At the end of the workshop they'll have a fully automated CI/CD pipeline with embedded security testing that they can use to deploy an application. Level : Intermediate Duration : 2 - 3 hours CSF Functions : Prevent CAF Components : Preventative Prerequisites : AWS Account, Admin IAM User","title":"Module 2 Add a Dockerfile linting stage"},{"location":"02-linting/#scenario","text":"","title":"Scenario"},{"location":"02-linting/#architecture","text":"","title":"Architecture"},{"location":"02-linting/#presentation-deck","text":"","title":"Presentation deck"},{"location":"02-linting/#region","text":"","title":"Region"},{"location":"02-linting/#modules","text":"","title":"Modules"},{"location":"03-secrets-scanning/","text":"Module 3 Add a secrets scanning stage Attendees will learn about the security considerations around building container images and then apply those learnings by embedding security testing into a CI/CD pipeline that's used for building, shipping, and deploying a container based application. They will get hands-on experience integrating security testing such as static analysis of Dockerfiles and application code, vulnerability assessments of images, and signing of images using a variety of open source projects. At the end of the workshop they'll have a fully automated CI/CD pipeline with embedded security testing that they can use to deploy an application. Level : Intermediate Duration : 2 - 3 hours CSF Functions : Prevent CAF Components : Preventative Prerequisites : AWS Account, Admin IAM User Scenario Architecture Presentation deck Region Modules","title":"Module 3: Secrets Scanning"},{"location":"03-secrets-scanning/#module-3-add-a-secrets-scanning-stage","text":"Attendees will learn about the security considerations around building container images and then apply those learnings by embedding security testing into a CI/CD pipeline that's used for building, shipping, and deploying a container based application. They will get hands-on experience integrating security testing such as static analysis of Dockerfiles and application code, vulnerability assessments of images, and signing of images using a variety of open source projects. At the end of the workshop they'll have a fully automated CI/CD pipeline with embedded security testing that they can use to deploy an application. Level : Intermediate Duration : 2 - 3 hours CSF Functions : Prevent CAF Components : Preventative Prerequisites : AWS Account, Admin IAM User","title":"Module 3 Add a secrets scanning stage"},{"location":"03-secrets-scanning/#scenario","text":"","title":"Scenario"},{"location":"03-secrets-scanning/#architecture","text":"","title":"Architecture"},{"location":"03-secrets-scanning/#presentation-deck","text":"","title":"Presentation deck"},{"location":"03-secrets-scanning/#region","text":"","title":"Region"},{"location":"03-secrets-scanning/#modules","text":"","title":"Modules"},{"location":"04-vuln-scanning/","text":"Module 4 Add a vulnerability scanning stage Attendees will learn about the security considerations around building container images and then apply those learnings by embedding security testing into a CI/CD pipeline that's used for building, shipping, and deploying a container based application. They will get hands-on experience integrating security testing such as static analysis of Dockerfiles and application code, vulnerability assessments of images, and signing of images using a variety of open source projects. At the end of the workshop they'll have a fully automated CI/CD pipeline with embedded security testing that they can use to deploy an application. Level : Intermediate Duration : 2 - 3 hours CSF Functions : Prevent CAF Components : Preventative Prerequisites : AWS Account, Admin IAM User Scenario Architecture Presentation deck Region Modules","title":"Module 4: Vulnerability Scanning"},{"location":"04-vuln-scanning/#module-4-add-a-vulnerability-scanning-stage","text":"Attendees will learn about the security considerations around building container images and then apply those learnings by embedding security testing into a CI/CD pipeline that's used for building, shipping, and deploying a container based application. They will get hands-on experience integrating security testing such as static analysis of Dockerfiles and application code, vulnerability assessments of images, and signing of images using a variety of open source projects. At the end of the workshop they'll have a fully automated CI/CD pipeline with embedded security testing that they can use to deploy an application. Level : Intermediate Duration : 2 - 3 hours CSF Functions : Prevent CAF Components : Preventative Prerequisites : AWS Account, Admin IAM User","title":"Module 4 Add a vulnerability scanning stage"},{"location":"04-vuln-scanning/#scenario","text":"","title":"Scenario"},{"location":"04-vuln-scanning/#architecture","text":"","title":"Architecture"},{"location":"04-vuln-scanning/#presentation-deck","text":"","title":"Presentation deck"},{"location":"04-vuln-scanning/#region","text":"","title":"Region"},{"location":"04-vuln-scanning/#modules","text":"","title":"Modules"},{"location":"05-review/","text":"Cleaup Attendees will learn about the security considerations around building container images and then apply those learnings by embedding security testing into a CI/CD pipeline that's used for building, shipping, and deploying a container based application. They will get hands-on experience integrating security testing such as static analysis of Dockerfiles and application code, vulnerability assessments of images, and signing of images using a variety of open source projects. At the end of the workshop they'll have a fully automated CI/CD pipeline with embedded security testing that they can use to deploy an application. Level : Intermediate Duration : 2 - 3 hours CSF Functions : Prevent CAF Components : Preventative Prerequisites : AWS Account, Admin IAM User Scenario Architecture Presentation deck Region Modules","title":"Cleaup"},{"location":"05-review/#cleaup","text":"Attendees will learn about the security considerations around building container images and then apply those learnings by embedding security testing into a CI/CD pipeline that's used for building, shipping, and deploying a container based application. They will get hands-on experience integrating security testing such as static analysis of Dockerfiles and application code, vulnerability assessments of images, and signing of images using a variety of open source projects. At the end of the workshop they'll have a fully automated CI/CD pipeline with embedded security testing that they can use to deploy an application. Level : Intermediate Duration : 2 - 3 hours CSF Functions : Prevent CAF Components : Preventative Prerequisites : AWS Account, Admin IAM User","title":"Cleaup"},{"location":"05-review/#scenario","text":"","title":"Scenario"},{"location":"05-review/#architecture","text":"","title":"Architecture"},{"location":"05-review/#presentation-deck","text":"","title":"Presentation deck"},{"location":"05-review/#region","text":"","title":"Region"},{"location":"05-review/#modules","text":"","title":"Modules"},{"location":"contribute/","text":"Contributing Guidelines Thank you for your interest in contributing to our project. Whether it's a bug report, new feature, correction, or additional documentation, we greatly value feedback and contributions from our community. Please read through this document before submitting any issues or pull requests to ensure we have all the necessary information to effectively respond to your bug report or contribution. Reporting Bugs/Feature Requests We welcome you to use the GitHub issue tracker to report bugs or suggest features. When filing an issue, please check existing open , or recently closed , issues to make sure somebody else hasn't already reported the issue. Please try to include as much information as you can. Details like these are incredibly useful: A reproducible test case or series of steps The version of our code being used Any modifications you've made relevant to the bug Anything unusual about your environment or deployment Contributing via Pull Requests Contributions via pull requests are much appreciated. Before sending us a pull request, please ensure that: You are working against the latest source on the master branch. You check existing open, and recently merged, pull requests to make sure someone else hasn't addressed the problem already. You open an issue to discuss any significant work - we would hate for your time to be wasted. To send us a pull request, please: Fork the repository. Modify the source; please focus on the specific change you are contributing. If you also reformat all the code, it will be hard for us to focus on your change. Ensure local tests pass. Commit to your fork using clear commit messages. Send us a pull request, answering any default questions in the pull request interface. Pay attention to any automated CI failures reported in the pull request, and stay involved in the conversation. GitHub provides additional document on forking a repository and creating a pull request . Finding contributions to work on Looking at the existing issues is a great way to find something to contribute on. As our projects, by default, use the default GitHub issue labels ((enhancement/bug/duplicate/help wanted/invalid/question/wontfix), looking at any 'help wanted' issues is a great place to start. Code of Conduct This project has adopted the Amazon Open Source Code of Conduct . For more information see the Code of Conduct FAQ or contact opensource-codeofconduct@amazon.com with any additional questions or comments. Security issue notifications If you discover a potential security issue in this project we ask that you notify AWS/Amazon Security via our vulnerability reporting page . Please do not create a public github issue. Licensing See the LICENSE file for our project's licensing. We will ask you to confirm the licensing of your contribution. We may ask you to sign a Contributor License Agreement (CLA) for larger changes.","title":"Contributing"},{"location":"contribute/#contributing-guidelines","text":"Thank you for your interest in contributing to our project. Whether it's a bug report, new feature, correction, or additional documentation, we greatly value feedback and contributions from our community. Please read through this document before submitting any issues or pull requests to ensure we have all the necessary information to effectively respond to your bug report or contribution.","title":"Contributing Guidelines"},{"location":"contribute/#reporting-bugsfeature-requests","text":"We welcome you to use the GitHub issue tracker to report bugs or suggest features. When filing an issue, please check existing open , or recently closed , issues to make sure somebody else hasn't already reported the issue. Please try to include as much information as you can. Details like these are incredibly useful: A reproducible test case or series of steps The version of our code being used Any modifications you've made relevant to the bug Anything unusual about your environment or deployment","title":"Reporting Bugs/Feature Requests"},{"location":"contribute/#contributing-via-pull-requests","text":"Contributions via pull requests are much appreciated. Before sending us a pull request, please ensure that: You are working against the latest source on the master branch. You check existing open, and recently merged, pull requests to make sure someone else hasn't addressed the problem already. You open an issue to discuss any significant work - we would hate for your time to be wasted. To send us a pull request, please: Fork the repository. Modify the source; please focus on the specific change you are contributing. If you also reformat all the code, it will be hard for us to focus on your change. Ensure local tests pass. Commit to your fork using clear commit messages. Send us a pull request, answering any default questions in the pull request interface. Pay attention to any automated CI failures reported in the pull request, and stay involved in the conversation. GitHub provides additional document on forking a repository and creating a pull request .","title":"Contributing via Pull Requests"},{"location":"contribute/#finding-contributions-to-work-on","text":"Looking at the existing issues is a great way to find something to contribute on. As our projects, by default, use the default GitHub issue labels ((enhancement/bug/duplicate/help wanted/invalid/question/wontfix), looking at any 'help wanted' issues is a great place to start.","title":"Finding contributions to work on"},{"location":"contribute/#code-of-conduct","text":"This project has adopted the Amazon Open Source Code of Conduct . For more information see the Code of Conduct FAQ or contact opensource-codeofconduct@amazon.com with any additional questions or comments.","title":"Code of Conduct"},{"location":"contribute/#security-issue-notifications","text":"If you discover a potential security issue in this project we ask that you notify AWS/Amazon Security via our vulnerability reporting page . Please do not create a public github issue.","title":"Security issue notifications"},{"location":"contribute/#licensing","text":"See the LICENSE file for our project's licensing. We will ask you to confirm the licensing of your contribution. We may ask you to sign a Contributor License Agreement (CLA) for larger changes.","title":"Licensing"},{"location":"license/","text":"License MIT License Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved. Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"license/#license","text":"MIT License Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved. Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"}]}